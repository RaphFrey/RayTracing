import numpy as np
import matplotlib.pyplot as plt

array = []
with open('Frame1.txt') as frame:
    array = [[np.float64(num) for num in line[:-2].split("\t")] for line in frame]

points = np.array(array, dtype = np.float64)[:-1].transpose()

with open('Frame2.txt') as frame:
    array = [[np.float64(num) for num in line[:-2].split("\t")] for line in frame]

points2 = np.array(array, dtype = np.float64).transpose()

fig = plt.figure()
ax = plt.axes(projection='3d')
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('z')
ax.set_xlim3d(-10, 10)
ax.set_ylim3d(-10, 10)
ax.set_zlim3d(-10, 10)

X = points[1]*np.cos(points[2])*np.sin(points[3])
Y = points[1]*np.sin(points[2])*np.sin(points[3])
Z = points[1]*np.cos(points[3])

X2 = points2[1]*np.cos(points2[2])*np.sin(points2[3])
Y2 = points2[1]*np.sin(points2[2])*np.sin(points2[3])
Z2 = points2[1]*np.cos(points2[3])
#print(*np.array([X,Y,Z]).transpose(), sep="\n")
ax.scatter3D(X[0],Y[0],Z[0])
ax.plot3D(X,Y,Z)
ax.scatter3D(X[-1],Y[-1],Z[-1])
ax.scatter3D(X2[0],Y2[0],Z2[0])
ax.plot3D(X2,Y2,Z2)
ax.scatter3D(X2[-1],Y2[-1],Z2[-1])

plt.show()

# time = np.array([
#     318648013,
#     320516318,
#     320685936,
#     318757911,
#     317854377,
#     268208390,
#     244137669,
#     246786475,
#     275202428,
#     321996418,
#     324018788,
#     323993498,
#     334102714,
#     332646947,
#     319780243,
#     328990295,
#     323006877,
#     240417134,
#     78605375,
#     32644576,
#     37097359,
#     37435313,
#     32498925,
#     76559754,
#     227888514,
#     324693136,
#     319882781,
#     321395041,
#     321031351,
#     326625921,
#     178006800,
#     34600234,
#     31573835,
#     30559980,
#     30962295,
#     30762152,
#     30067653,
#     31312302,
#     33569843,
#     174171001,
#     319520599,
#     321759260,
#     324173079,
#     226970885,
#     34518492,
#     32665855,
#     29707315,
#     28146277,
#     28126734,
#     28270527,
#     27577598,
#     29408400,
#     31137459,
#     32982685,
#     221635299,
#     321973861,
#     324294421,
#     67762121,
#     33911535,
#     32494472,
#     28069832,
#     26554941,
#     25796113,
#     26117836,
#     29462604,
#     30810630,
#     29642970,
#     31607758,
#     64343669,
#     314953948,
#     244181355,
#     36767810,
#     31420433,
#     27679355,
#     25834775,
#     25137266,
#     24788223,
#     24981776,
#     25208790,
#     26052080,
#     27587453,
#     30363696,
#     32280848,
#     226718359,
#     95351279,
#     29924722,
#     28117750,
#     26547290,
#     25217197,
#     23690288,
#     23530835,
#     23014252,
#     23863880,
#     24707593,
#     25451289,
#     28026590,
#     29045487,
#     94843009,
#     95245253,
#     28758127,
#     27802092,
#     25610656,
#     24388575,
#     23557130,
#     23154866,
#     22900724,
#     23660298,
#     23967382,
#     25555824,
#     27431894,
#     28905303,
#     92237076,
#     228570345,
#     31607563,
#     29861125,
#     26941913,
#     25548075,
#     24405113,
#     24144957,
#     24176581,
#     24524569,
#     25986016,
#     27070651,
#     29853002,
#     31726316,
#     221740436,
#     308267163,
#     64318705,
#     30629067,
#     28507871,
#     26437477,
#     25631648,
#     24921522,
#     25360943,
#     25330091,
#     26574937,
#     28789545,
#     30804731,
#     61968739,
#     307551202,
#     314372998,
#     218353618,
#     32216437,
#     30426431,
#     28683828,
#     27018622,
#     26936171,
#     26629552,
#     27187410,
#     28449097,
#     30271227,
#     32374122,
#     213384644,
#     313298991,
#     313218454,
#     313698278,
#     170688814,
#     32242880,
#     30712273,
#     29590746,
#     30869574,
#     30786156,
#     29702255,
#     30862190,
#     32183400,
#     165960263,
#     313488777,
#     313638139,
#     313827167,
#     314032778,
#     313359419,
#     222870060,
#     73306089,
#     31864554,
#     36306043,
#     35977208,
#     31931073,
#     72085186,
#     220742514,
#     312734228,
#     313652199,
#     315253777,
#     313859309,
#     313642725,
#     313784636,
#     312884776,
#     317372206,
#     260721317,
#     234002155,
#     235130404,
#     261738394,
#     310878121,
#     312363887,
#     312735700,
#     313446418,
#     313488070,
# ])
# print(np.sum(time*(10**-6)/(60**2)))
